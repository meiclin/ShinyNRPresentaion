source('~/run_analysis.R')
source('~/run_analysis.R')
install.packages("plyr")
install.packages("plyr")
source('~/run_analysis.R')
source('~/run_analysis.R')
source('~/Getting-Cleaning-Data-PA1/run_analysis.R')
knitr(CodeBook)
knit(CodeBook.md)
library(knitr)
knit(CodeBook.Rmd)
knit(CodeBook)
knit(CodeBook.Rmd)
ld
ls
getwd()
knit(CodeBook.Rmd)
knit("CookBook.Rmd")
knit("CodeBook.Rmd")
knit("README.Rmd")
write.table("tidyData", row.name=FALSE)
LS
ls
getwd()
write.table("tidyData", row.name=FALSE)
write.table(x, file = "tideData", row.names = FALSE)
write.table("tideData", row.names = FALSE)
write.table(tideData, row.names = FALSE)
write.table("tideData", row.names = FALSE)
source('~/Getting-Cleaning-Data-PA1/run_analysis.R')
source('~/Getting-Cleaning-Data-PA1/run_analysis.R')
source('~/Getting-Cleaning-Data-PA1/run_analysis.R')
source('~/Getting-Cleaning-Data-PA1/run_analysis.R')
source('~/Getting-Cleaning-Data-PA1/run_analysis.R')
source('~/Getting-Cleaning-Data-PA1/run_analysis.R')
source('~/Getting-Cleaning-Data-PA1/run_analysis.R')
source('~/Getting-Cleaning-Data-PA1/run_analysis.R')
source('~/Getting-Cleaning-Data-PA1/run_analysis.R')
source('~/Getting-Cleaning-Data-PA1/run_analysis.R')
source('~/Getting-Cleaning-Data-PA1/run_analysis.R')
install.packages("RColorBrewer")
source('~/ExData_P2/plot1.R')
source('~/ExData_P2/plot1.R')
source('~/ExData_P2/plot1.R')
source('~/ExData_P2/plot1.R')
source('~/ExData_P2/plot1.R')
source('~/ExData_P2/plot1.R')
source('~/ExData_P2/plot1.R')
source('~/ExData_P2/plot1.R')
source('~/ExData_P2/plot1.R')
source('~/ExData_P2/plot1.R')
source('~/ExData_P2/plot1.R')
source('~/ExDdata_P2/plot1.R')
source('~/ExDdata_P2/plot1.R')
source('~/ExDdata_P2/plot1.R')
source('~/ExDdata_P2/plot1.R')
source('~/ExDdata_P2/plot1.R')
source('~/ExDdata_P2/plot1.R')
source('~/ExDdata_P2/plot1.R')
source('~/ExDdata_P2/plot1.R')
source('~/ExDdata_P2/plot1.R')
source('~/ExDdata_P2/plot1.R')
source('~/ExDdata_P2/plot1.R')
source('~/ExDdata_P2/plot2.R')
source('~/ExDdata_P2/plot2.R')
source('~/ExDdata_P2/plot2.R')
source('~/ExDdata_P2/plot2.R')
source('~/ExDdata_P2/plot2.R')
source('~/ExDdata_P2/plot2.R')
source('~/ExDdata_P2/plot2.R')
source('~/ExDdata_P2/plot2.R')
source('~/ExDdata_P2/plot2.R')
source('~/ExDdata_P2/plot2.R')
source('~/ExDdata_P2/plot2.R')
source('~/ExDdata_P2/plot2.R')
source('~/ExDdata_P2/plot2.R')
source('~/ExDdata_P2/plot2.R')
source('~/ExDdata_P2/plot2.R')
source('~/ExDdata_P2/plot2.R')
source('~/ExDdata_P2/plot2.R')
source('~/ExDdata_P2/plot2.R')
source('~/ExDdata_P2/plot2.R')
source('~/ExDdata_P2/plot2.R')
source('~/ExDdata_P2/plot2.R')
source('~/ExDdata_P2/plot2.R')
source('~/ExDdata_P2/plot2.R')
source('~/ExDdata_P2/plot2.R')
source('~/ExDdata_P2/test.R')
source('~/ExDdata_P2/test.R')
source('~/ExDdata_P2/plot2.R')
source('~/ExDdata_P2/plot2.R')
source('~/ExDdata_P2/plot2.R')
source('~/ExDdata_P2/plot2.R')
source('~/ExDdata_P2/plot2.R')
source('~/ExDdata_P2/plot2.R')
source('~/ExDdata_P2/plot2.R')
source('~/ExDdata_P2/plot2.R')
source('~/ExDdata_P2/plot2.R')
source('~/ExDdata_P2/plot2.R')
source('~/ExDdata_P2/plot2.R')
source('~/ExDdata_P2/plot2.R')
source('~/ExDdata_P2/plot2.R')
source('~/ExDdata_P2/plot2.R')
source('~/ExDdata_P2/plot3.R')
source('~/ExDdata_P2/plot3.R')
source('~/ExDdata_P2/plot3.R')
source('~/ExDdata_P2/plot3.R')
source('~/ExDdata_P2/plot3.R')
source('~/ExDdata_P2/plot4.R')
source('~/ExDdata_P2/plot4.R')
source('~/ExDdata_P2/plot4.R')
source('~/ExDdata_P2/plot4.R')
source('~/ExDdata_P2/plot4.R')
source('~/ExDdata_P2/plot4.R')
source('~/ExDdata_P2/plot5.R')
source('~/ExDdata_P2/plot5.R')
source('~/ExDdata_P2/plot5.R')
source('~/ExDdata_P2/plot5.R')
source('~/ExDdata_P2/plot5.R')
source('~/ExDdata_P2/plot5.R')
source('~/ExDdata_P2/test.R')
source('~/ExDdata_P2/test.R')
source('~/ExDdata_P2/test.R')
source('~/ExDdata_P2/test.R')
source('~/ExDdata_P2/test.R')
sub3 <- subset(NEI, fips == "24510" & type=="ON-ROAD")
sub3 <- subset(NEI, fips == "24510" & type=="ON-ROAD")
source('~/ExDdata_P2/test.R')
source('~/ExDdata_P2/test.R')
source('~/ExDdata_P2/test.R')
source('~/ExDdata_P2/test.R')
source('~/ExDdata_P2/plot5.R')
source('~/ExDdata_P2/plot5.R')
source('~/ExDdata_P2/plot5.R')
source('~/ExDdata_P2/plot5.R')
source('~/ExDdata_P2/plot5.R')
source('~/ExDdata_P2/plot5.R')
source('~/test.R')
source('~/ExDdata_P2/plot5.R')
source('~/ExDdata_P2/plot5.R')
source('~/ExDdata_P2/plot5.R')
source('~/ExDdata_P2/plot5.R')
source('~/ExDdata_P2/plot5.R')
source('~/ExDdata_P2/plot5.R')
source('~/ExDdata_P2/plot5.R')
source('~/ExDdata_P2/plot5.R')
source('~/ExDdata_P2/plot5.R')
source('~/ExDdata_P2/plot6.R')
source('~/ExDdata_P2/plot6.R')
source('~/ExDdata_P2/plot6.R')
source('~/ExDdata_P2/plot6.R')
getwd()
source('~/ExDdata_P2/plot1.R')
source('~/ExDdata_P2/plot2.R')
source('~/ExDdata_P2/plot1.R')
source('~/ExDdata_P2/plot1.R')
source('~/ExDdata_P2/plot1.R')
source('~/ExDdata_P2/plot1.R')
source('~/ExDdata_P2/plot1.R')
source('~/ExDdata_P2/plot1.R')
source('~/ExDdata_P2/plot1.R')
source('~/ExDdata_P2/plot1.R')
source('~/ExDdata_P2/plot1.R')
source('~/ExDdata_P2/plot2.R')
source('~/ExDdata_P2/plot2.R')
source('~/ExDdata_P2/plot2.R')
source('~/ExDdata_P2/plot3.R')
source('~/ExDdata_P2/plot3.R')
R.version.string
install_from_swirl("Getting and Cleaning Data")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
carn <- tbl_df(mydf)
cran <- tb1_df(mydf)
load("tb1_df")
load(tb1_df)
cran <- tb1_df(mydf).
cran <- tb1_df(mydf)
cran <- tbl_df(mydf)
rm("mydf")
?tbl_df
cran
?select
select(cran, ip_id, package, country)
5:20
selsct(cran, r_arch:country)
select(cran, r_arch:country)
?select
select(cran, -r_arch:country)
select(cran, country:r_arch)
print
print(select(cran, country:r_arch))
cran
select(cran, -time)
-5:20
-(5:20)
select(-X:size)
select(cran, -X:size)
select(cran, -(X:size)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version == "3.0.2", country == "IN")
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, r_version > 100500 AND r_os == "linux-gnu")
?filter
filter(cran, r_version > 100500 & r_os == "linux-gnu")
filter(cran, size > 100500 & r_os == "linux-gnu")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(ip_id)
cran2 <- cran.select(ip_id)
cran2 <- select(cran, ip_id)
select(cran, size:ip_id)
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country(ascending), r_version(descending), ip_id(ascending))
arrange(cran2, country, des(r_version), ip_id
arrange(cran2, country, des(r_version), ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, size:ip_id, size:package)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size / 2^10)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size / 1000)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
group_by(cran, package)
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
# 1. Separate arguments by commas
submit()
reset()
swirl()
submit()
reset()
swirl()
reset()
summarize1.R
source('/var/folders/zt/jkgj_4w50yxdtyzj2jd2gkfh0000gn/T//RtmpQtBPWL/summarize1.R')
reset()
submit()
1
2
3
reset()
submit()
submit()
reset()
reset()
swirl
swirl()
submit()
submit()
swirl()
source('/var/folders/zt/jkgj_4w50yxdtyzj2jd2gkfh0000gn/T//RtmpQtBPWL/summarize1.R')
swirl()
library(swirl)
ls()
rm(list=ls())
ls()
swirl()
submit()
tbl(pack_sum)
pack_sum(tbl)
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs =0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
arrange(top_unique, desc(unique))
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
?chain
submit()
View(result3)
submit()
submit()
submit()
reset()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count)
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class, c("sex", "class"))
submit()
students3
submit()
?spread
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
extract_numeric("class5")
?mutate
submit()
submit()
?extract_numeric
?extract_numeric
submit()
submit()
submit()
submit()
submit()
reset()
submit()
submit()
submit()
students4
submit()
submit()
submit()
submit()
passed
failed
mutate(student4, status = "passed", status = "failed")
?mutate
mutate(passed, status = "passed")
passed <- passed %>% mutate(status = "passed")
failed <- failed %>% mutate(status = "failed")
?rbind_rows
packageVersion('dplyr')
?bind_rows
bind_rows(passed, failed)
sat
submit()
submit()
submit()
submit()
submit()
Sys.getlocale("LC_ALL")
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
minute(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
ymd("March 12, 1975")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd(=="192012")
ymd("1920/1/2")
date-time
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
update(this_moment, hours = 16, minutes = 13, seconds = 10)
update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment <- update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment
nyc <- now("America/New_York")
nyc
depart <- nyc + day(2)
depart <- nyc + days(2)
depart
depart <- update(nyc, hours = 17, minutes = 34)
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- nyc + hours(15) + minutes(50)
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz("Asia/Hong_Kong")
arrive <- with_tz(Asia/Hong_Kong)
arrive <- with_tz(depart, "Asia/Hong_Kong")
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
new_interval()
new_interval(arrive, last_time)
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
swirl()
install.packages(UsingR)
install_from_swirl("Regression Models")
library(swirl)
swirl()
install_from_swirl("Regression Models")
install_from_swirl("Statistical Inference")
install.packages("UsingR")
library(swirl)
swirl()
pnorm(93, 100, 10)
qnorm(0.05, 100, 10)
pnorm(70, 80, 10)
qnorm(0.95, 1100, 75)
qnorm(0.95, 1100, 75/sqrt(100))
pbinom(3, 5, 0.5, lower.tail=FALSE)
install.packages("devtools")
library("devtools")
install_github("ropensci/plotly")
library("plotly")
load("courseraData.rda")
install.packages("shiny")
install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(name='meiclin', token='CFFF943AB7F6B6BB98D760F222FD3C60', secret='giheodexgL6ARNRHoV/yvdsdZwsqIR8LgW6QkWdU')
library(shinyapps)
shinyapps::deployApp('path/to/your/app')
library(shinyapps)
shinyapps::deployApp('path/to/your/app')
install.packages(AppliedPredictiveModeling)
install.packages("caret")
install.packages("AppliedPredictiveModeling")
install.packages("rattle")
install.packages("rpart.plot")
install.packages("randomForest")
install.packages("GTK+")
install.packages("RColorBrewer")
install.packages("randomForest")
install.packages("rattle")
install.packages("rpart")
install.packages("rpart.plot")
version
version
version
install.packages("e1071")
install.packages("'magnet_forearm_z'")
runApp()
library(shiny)
runApp()
getwd
getwd()
setwd("/Users/choufaimily/Dev_project")
runapp()
runApp()
library("rock")
head(rock)
head(pressure)
head(cars)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
head(iris)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
head(rock)
head(iris)
